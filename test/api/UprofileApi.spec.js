/**
 * TempApi
 * This is a sample openApi document
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: lampralexandros@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.TempApi);
  }
}(this, function(expect, TempApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new TempApi.UprofileApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('UprofileApi', function() {
    describe('createuprofile', function() {
      it('should call createuprofile successfully', function(done) {
        //uncomment below and update the code to test createuprofile
        //instance.createuprofile(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteuprofile', function() {
      it('should call deleteuprofile successfully', function(done) {
        //uncomment below and update the code to test deleteuprofile
        //instance.deleteuprofile(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getAlluprofile', function() {
      it('should call getAlluprofile successfully', function(done) {
        //uncomment below and update the code to test getAlluprofile
        //instance.getAlluprofile(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getByParamsuprofile', function() {
      it('should call getByParamsuprofile successfully', function(done) {
        //uncomment below and update the code to test getByParamsuprofile
        //instance.getByParamsuprofile(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getuprofile', function() {
      it('should call getuprofile successfully', function(done) {
        //uncomment below and update the code to test getuprofile
        //instance.getuprofile(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateuprofile', function() {
      it('should call updateuprofile successfully', function(done) {
        //uncomment below and update the code to test updateuprofile
        //instance.updateuprofile(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
